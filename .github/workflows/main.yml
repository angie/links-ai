name: 🚀 Deploy

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# env:
#   AWS_REGION: ${{ vars.AWS_REGION }}

# Permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    name: 🏗️ Build and test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - name: ⚙️ Install dependencies
        run: |
          pnpm install

      - name: 🏗️ Run build
        run: |
          pnpm build

      - name: 🧪 Run lint
        run: |
          pnpm lint

      - name: 📘 Run typecheck
        run: |
          pnpm typecheck

      - name: 🧬 Run test
        run: |
          pnpm test:ci

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [lint]
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: configure aws credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  #         role-session-name: github-actions
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: ⚙️ Install dependencies
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: true

  #     - name: λ sst diff
  #       working-directory: apps/backend
  #       run: |
  #         pnpm exec sst diff --stage production

  #     - name: λ sst deploy
  #       working-directory: apps/backend
  #       run: |
  #         pnpm exec sst deploy --stage production
